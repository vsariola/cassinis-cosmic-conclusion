// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_INL_
# define SHADER_INL_
# define VAR_col "y"
# define VAR_u "s"

const char *shader_frag =
 "#version 430\n"
 "out vec3 y;"
 "uniform ivec4 s;"
 "vec2 t(vec3 v,vec3 y)"
 "{"
   "float s=dot(v,y),a=s*s-dot(v,v)+1;"
   "return vec2(-s-sqrt(a),a);"
 "}"
 "vec3 n(vec3 v,vec3 y)"
 "{"
   "float s=1-.999*dot(v,y);"
   "return vec3(5,2,1)/1e5/s/s;"
 "}"
 "void main()"
 "{"
   "float v,a,f,i,r,d,x,l;"
   "vec2 m,u,z,e;"
   "vec3 c,g,p,w,C,F,E;"
   "ivec3 D=ivec3(gl_FragCoord);"
   "for(v=1;v<4;v++)"
     "for(a=1;a<5;a++)"
       "{"
         "f=(D.x+D.y*512+s.w)/4/4.8e4;"
         "i=f*a/32+v/3;"
         "r=mod(i,1);"
         "x=f+(D.x&2)*f/50;"
         "l=4*sin(exp2(mod(i-r,3)/6+8.5)*f*a*v);"
         "for(d=3;d<50;x+=d*=1.02)"
           "l+=sin(x*d)/d;"
         "y+=sin(sin(i<9?"
           "f/a/47:"
           "0)*l)*exp2(21-r*13-1/r-v/3-a/3);"
       "}"
   "y=(ivec3(y)>>D.x%2*8)%256/255.;"
   "if(s.w<0)"
     "{"
       "v=s.z/3.6e6;"
       "a=mod(v,2);"
       "f=v-a;"
       "p=vec3(2*D.xy-s.xy,4*s.y);"
       "w=f==0?"
         "(c=vec3(0,-1,33),p.zy+=p.yz*vec2(1,-1)*(-.05+.08*a),vec3(0,90+15*a,-180)):"
         "f==2?"
           "(c=vec3(3,2,-3),p.xy+=p.yx*vec2(.3,-.3),vec3(0,25,-250)*(1+a*a)):"
           "f==4?"
             "(c=vec3(0,1,3),vec3(180,50+a*50,-600)):"
             "(c=vec3(-3,2,6),vec3(0,0,-600)*(1+a*a));"
       "w*=.01;"
       "p=normalize(p);"
       "c=normalize(c);"
       "i=-w.y/p.y;"
       "g=w+p*i;"
       "m=t(w,p);"
       "u=t(g,c);"
       "w+=m.x*p;"
       "f=-w.y/c.y;"
       "d=length(g.xz);"
       "x=length((w+f*c).xz);"
       "z+=.25;"
       "e=vec2(w.y*5,d*15)+1;"
       "y=n(c,p);"
       "C=n(c,reflect(p,w));"
       "for(v=1;v<8;v++)"
         "F+=z.x*(sin(e.x+vec3(0,1,2)/4)+1),E+=z.y*sin(e.y+vec3(2,1,0)/8),z*=.5,z.y*=smoothstep(1.,.6,(1+p.y)*sqrt(abs(dot(normalize(g),p)))*tanh(i*40.)),e=1.99*e+1;"
       "E=abs(E);"
       "l=1-smoothstep(.4,.2,abs(x-2))*(.5+.4*sin(33*x)*cos(5*x));"
       "x=tanh(55*m.y);"
       "if(m.x>0)"
         "{"
           "y*=1-x;"
           "y+=sqrt(C)*pow(1+dot(p,w),8.)+max(dot(c,w),0)*x*F;"
           "if(f>0)"
             "y*=l;"
         "}"
       "y=sqrt(tanh(mix(y,E*smoothstep(.2,0.,u.y*step(0,u.x)),smoothstep(.4,.2,abs(d-2))*(m.x<i?"
         "1-x:"
         "1)*3*E.y)*a*(2-a)));"
     "}"
 "}";

#endif // SHADER_INL_
